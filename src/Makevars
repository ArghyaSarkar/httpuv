## Use the R_HOME indirection to support installations of multiple R version

# Use C++11 if available
CXX_STD=CXX11

UNAME := $(shell uname)

ifeq ($(UNAME), Darwin)
FRAMEWORK = -framework CoreServices
endif

PKG_LIBS = ./libuv/.libs/libuv.a ./http-parser/http_parser.o ./sha1/sha1.o ./base64/base64.o $(FRAMEWORK)
ifeq ($(UNAME), SunOS)
PKG_LIBS += -lkstat -lsendfile -lsocket
endif
ifeq ($(UNAME), FreeBSD)
PKG_LIBS += -lkvm
endif
ifeq ($(UNAME), OpenBSD)
PKG_LIBS += -lkvm
endif

PKG_CPPFLAGS = -I./libuv/include -I./http-parser -I./sha1 -I./base64 $(C_VISIBILITY)

# To avoid spurious warnings from `R CMD check --as-cran`, about compiler
# warning flags like -Werror.
ifdef _R_CHECK_COMPILATION_FLAGS_
CONFIGURE_FLAGS="--quiet"
endif

#### Debugging flags ####
# Uncomment to enable thread assertions
# PKG_CPPFLAGS += -DDEBUG_THREAD -UNDEBUG
# Uncomment to enable printing of trace() messages
# PKG_CPPFLAGS += -DDEBUG_TRACE


$(SHLIB): libuv/.libs/libuv.a http-parser/http_parser.o sha1/sha1.o base64/base64.o

libuv/Makefile:
	(cd libuv && sh autogen.sh && ./configure $(CONFIGURE_FLAGS))


libuv/.libs/libuv.a: libuv/Makefile
	$(MAKE) --directory=libuv \
		CC="$(CC)" CFLAGS="$(CFLAGS) $(CPICFLAGS) $(C_VISIBILITY)" AR="$(AR)" RANLIB="$(RANLIB)" \
		HAVE_DTRACE=0

clean:
	$(MAKE) --directory=libuv distclean
